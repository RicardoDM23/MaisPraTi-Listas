1) Faça uma listagem do cardápio ordenada por nome;

  select nomeCafe, descricao, composicao, valor from cardapio order by nomeCafe;

2) Apresente todas as comandas (código, data, mesa e nome do cliente) e os itens da comanda (código comanda, nome do café, descricão, quantidade, preço unitário e preço total do café) destas ordenados data e código da comanda e, também o nome do café;

  Select c.idComanda, c.data, c.nrMesa, c.nomeCliente, i.idComanda, ca.nomeCafe, ca.descricao, i.quantidade, ca.valor, (ca.valor*i.quantidade)
  from comanda c
  inner join itemComanda i on c.idComanda = i.idComanda
  inner join cardapio ca on i.idCafe = ca.idCafe
  order by c.data, c.idComanda, ca.nomeCafe

3)liste todas as comandas (codigo, data, mesa e nome do cliente) mais uma coluna com o valor total da comanda. ordene por data esta listagem

  Select c.idComanda, c.data, c.nrMesa, c.nomeCliente, (ca.valor*i.quantidade)
  from comanda c
  inner join itemComanda i on c.idComanda = i.idComanda
  inner join cardapio ca on i.idCafe = ca.idCafe
  order by c.data

4) Faça a mesma listagem das comandas da questão anterior (6), mas traga apenas as comandas que possuem mais do que um tipo de café na comanda;

  Select c.idComanda, c.data, c.nrMesa, c.nomeCliente, i.idComanda, ca.nomeCafe, 
  ca.descricao, i.quantidade, ca.valor, (ca.valor*i.quantidade)
  from comanda c
  inner join itemComanda i on c.idComanda = i.idComanda
  inner join cardapio ca on i.idCafe = ca.idCafe
  where c.idComanda in (
    select idComanda
    from itemComanda
    group by idComanda
    having count(distinct idCafe) > 1
  )
  order by c.data, c.idComanda, ca.nomeCafe

5) Qual o total de faturamento por data? ordene por data esta consulta.

  Select c.data, SUM(ca.valor * i.quantidade) as total_venda
  from comanda c
  inner join itemComanda i on c.idComanda = i.idComanda
  inner join cardapio ca on i.idCafe = ca.idCafe
  group by c.data
  order by c.data

6) Quais são os cafés que nunca foram vendidos?

  select c.idCafe, c.nomeCafe from cardapio c
  left join itemComanda i on c.idCafe = i.idCafe
  where i.idCafe is null;

7) Escreva um script para excluir do cardápio os cafés que nunca foram vendidos?

  SET SQL_SAFE_UPDATES = 0;

  DELETE FROM cardapio c
  WHERE NOT EXISTS (
    SELECT 1
    FROM itemComanda i
    WHERE c.idCafe = i.idCafe
  );

ou

  DELETE FROM cardapio
  WHERE idCafe IN (
    SELECT idCafe FROM (
      SELECT c.idCafe
      FROM cardapio c
      LEFT JOIN itemComanda i ON c.idCafe = i.idCafe
      WHERE i.idCafe IS NULL
    ) AS temp
  );

8) Aumente em 10% o valor de todos os cafés da cafeteria.

  update cardapio
  set valor = valor*1.1

9) Faça uma listagem do cardápio apresentando as seguintes colunas extras: quantidade de cafés vendidos e total vendido por café

  select c.idCafe, c.nomeCafe, c.valor, COALESCE(SUM(i.quantidade), 0) as qtdVendida, COALESCE(SUM(i.quantidade*c.valor),0) as total
  from cardapio c
  left join itemcomanda i on c.idCafe = i.idCafe
  group by c.idCafe, c.nomeCafe, c.valor
  order by total desc;

10) Dimunua 5% do valor de todos os cafés que tiveram mais que 50 quantidades vendidas;

  update cardapio
  set valor = valor * 0.95
  where idCafe in (
    select idCafe from (
    select c.idCafe from cardapio c 
    inner join itemcomanda i on c.idCafe = i.idCafe
    group by c.idCafe
    having count(*) > 50) as temp);


  SET SQL_SAFE_UPDATES = 1;